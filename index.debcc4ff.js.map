{"mappings":"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","sources":["src/js/constants/ElementId.js","src/js/constants/EventType.js","src/js/constants/Name.js","src/js/constants/ClassName.js","src/js/constants/CypressDom.js","src/js/config/lotto.config.js","src/js/core/Component.js","src/js/components/LottoContainer.js","src/js/constants/Event.js","src/js/config/lotto.reward.js","src/js/constants/LottoRewardKey.js","src/js/service/LottoService.js","src/js/utils/landom.js","src/js/utils/dom.js","src/js/App.js","src/js/index.js"],"sourcesContent":["export default Object.freeze({\n  luckyLottoContainer: 'lucky-lotto-container',\n  lottoAnswerInput: 'lotto-answer-input',\n  purchaseInput: 'purchase-input',\n  purchasedLotto: 'purchased-lotto',\n  purchasedLottoAmountLabel: 'purchased-lotto-amount-label',\n  benefitRateLabel: 'benefit-rate-label',\n  toggleButton: 'TOGGLE_BUTTON',\n})\n","export default Object.freeze({\n  purchase: 'PURCHASE',\n  toggleMyLotto: 'TOGGLE_MY_LOTTO',\n  checkMyLottoResult: 'CHECK_MY_LOTTO_RESULT',\n  resetGame: 'RESET_GAME',\n})\n","export default Object.freeze({\n  baseLottoNumbers: 'BASE_LOTTO_NUMBERS',\n  bonusLottoNumber: 'BONUS_LOTTO_NUMBER',\n})\n","export default Object.freeze({\n  displayNone: 'd-none',\n})\n","export default Object.freeze({\n  purchaseInput: 'PURCHASE_INPUT',\n  purchaseButton: 'PURCHASE_BUTTON',\n  lottoCountLabel: 'LOTTO_COUNT_LABEL',\n  toggleButton: 'TOGGLE_BUTTON',\n  lottoDetail: 'LOTTO_DETAIL',\n  resultLottoRankLabel: 'RESULT_LOTTO_RANK_LABEL',\n  resultLottoBenefitRateLabel: 'RESULT_LOTTO_BENEFIT_RATE_LABEL',\n  benefitRateButton: 'BENEFIT_RATE_BUTTON',\n  baseLottoInput: 'BASE_LOTTO_INPUT',\n  bonusLottoInput: 'BONUS_LOTTO_INPUT',\n})\n","export default Object.freeze({\n  price: 1000,\n  maxLottoNumber: 45,\n  lottoNumberCount: 7,\n})\n","export default class Component {\n  constructor($target) {\n    this.$target = $target\n    this.setup()\n    this.setEvent()\n    this.render()\n  }\n\n  setup() {}\n\n  template() {\n    return ''\n  }\n\n  setEvent() {}\n\n  render() {\n    this.$target.innerHTML = this.template()\n  }\n}\n","import Component from '../core/Component'\nimport ElementId from '../constants/ElementId'\nimport EventType from '../constants/EventType'\nimport Name from '../constants/Name'\nimport ClassName from '../constants/ClassName'\nimport CypressDom from '../constants/CypressDom'\nimport lottoConfig from '../config/lotto.config'\n\nexport default class LottoContainer extends Component {\n  template() {\n    return `\n            <h1 class=\"text-center\">üé± ÌñâÏö¥Ïùò Î°úÎòê</h1>\n            <form class=\"mt-5\" onsubmit=\"document.querySelector('button[data-event=PURCHASE]').click(); return false;\">\n                <label class=\"mb-2 d-inline-block\">Íµ¨ÏûÖÌï† Í∏àÏï°ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.</label>\n                <div class=\"d-flex\">\n                    <input\n                        id=\"${ElementId.purchaseInput}\"\n                        type=\"number\"\n                        class=\"w-100 mr-2 pl-2\"\n                        placeholder=\"Íµ¨ÏûÖ Í∏àÏï°\"\n                        data-test-element=\"${CypressDom.purchaseInput}\"\n                    />\n                    <button type=\"button\" class=\"btn btn-cyan\" data-event=\"${EventType.purchase}\" data-test-element=\"${CypressDom.purchaseButton}\">ÌôïÏù∏</button>\n                </div>\n            </form>\n            <section class=\"mt-9 ${ClassName.displayNone}\" id=\"${ElementId.purchasedLotto}\">\n                <div class=\"d-flex\">\n                <label class=\"flex-auto my-0\" id=\"${ElementId.purchasedLottoAmountLabel}\" data-test-element=\"${CypressDom.lottoCountLabel}\"></label>\n                <div class=\"flex-auto d-flex justify-end pr-1\">\n                    <label class=\"switch\">\n                    <input type=\"checkbox\" class=\"lotto-numbers-toggle-button\" data-event=\"${EventType.toggleMyLotto}\" id=\"${ElementId.toggleButton}\" data-test-element=\"${CypressDom.toggleButton}\" />\n                    <span class=\"text-base font-normal\">Î≤àÌò∏Î≥¥Í∏∞</span>\n                    </label>\n                </div>\n                </div>\n                <div class=\"d-flex flex-wrap\" id=\"${ElementId.purchasedLottoViewer}\"></div>\n            </section>\n            <form class=\"mt-9 ${ClassName.displayNone}\" id=\"${ElementId.lottoAnswerInput}\">\n            <label class=\"flex-auto d-inline-block mb-3\"\n                >ÏßÄÎÇú Ï£º ÎãπÏ≤®Î≤àÌò∏ 6Í∞úÏôÄ Î≥¥ÎÑàÏä§ ÎÑòÎ≤Ñ 1Í∞úÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.</label\n            >\n            <div class=\"d-flex\" onsubmit=\"event.preventDefault(); document.querySelector('button[data-event=CHECK_MY_LOTTO_RESULT]').click(); return false;\">\n                <div>\n                <h4 class=\"mt-0 mb-3 text-center\">ÎãπÏ≤® Î≤àÌò∏</h4>\n                <div>\n                    <input\n                    name=\"${Name.baseLottoNumbers}\"\n                    data-test-element=\"${CypressDom.baseLottoInput}\"\n                    type=\"number\"\n                    class=\"winning-number mx-1 text-center\"/>\n                    <input\n                    name=\"${Name.baseLottoNumbers}\"\n                    data-test-element=\"${CypressDom.baseLottoInput}\"\n                    type=\"number\"\n                    class=\"winning-number mx-1 text-center\"/>\n                    <input\n                    name=\"${Name.baseLottoNumbers}\"\n                    data-test-element=\"${CypressDom.baseLottoInput}\"\n                    type=\"number\"\n                    class=\"winning-number mx-1 text-center\"/>\n                    <input\n                    name=\"${Name.baseLottoNumbers}\"\n                    data-test-element=\"${CypressDom.baseLottoInput}\"\n                    type=\"number\"\n                    class=\"winning-number mx-1 text-center\"/>\n                    <input\n                    name=\"${Name.baseLottoNumbers}\"\n                    data-test-element=\"${CypressDom.baseLottoInput}\"\n                    type=\"number\"\n                    class=\"winning-number mx-1 text-center\"/>\n                    <input\n                    name=\"${Name.baseLottoNumbers}\"\n                    data-test-element=\"${CypressDom.baseLottoInput}\"\n                    type=\"number\"\n                    class=\"winning-number mx-1 text-center\"/>\n                </div>\n                </div>\n                <div class=\"bonus-number-container flex-grow\">\n                <h4 class=\"mt-0 mb-3 text-center\">Î≥¥ÎÑàÏä§ Î≤àÌò∏</h4>\n                <div class=\"d-flex justify-center\">\n                    <input type=\"number\" class=\"bonus-number text-center\" \n                    data-test-element=\"${CypressDom.bonusLottoInput}\" name=\"${Name.bonusLottoNumber}\"\n                     />\n                </div>\n                </div>\n            </div>\n            <button\n                type=\"button\"\n                class=\"open-result-modal-button mt-5 btn btn-cyan w-100\"\n                data-event=\"${EventType.checkMyLottoResult}\"\n                data-test-element=\"${CypressDom.benefitRateButton}\"\n            >\n                Í≤∞Í≥º ÌôïÏù∏ÌïòÍ∏∞\n            </button>\n            </form>\n        `\n  }\n}\n","export default Object.freeze({\n  onClick: 'click',\n})\n","export default Object.freeze({\n  fisrt: 2_000_000_000,\n  second: 30_000_000,\n  third: 1_500_000,\n  fourth: 50_000,\n  fifth: 50_00,\n})\n","export default Object.freeze({\n  FIRST: 6,\n  SECOND: 55,\n  THIRD: 5,\n  FOURTH: 4,\n  FIFTH: 5,\n})\n","import lottoConfig from '../config/lotto.config'\nimport lottoReward from '../config/lotto.reward'\nimport lottoRewardKey from '../constants/LottoRewardKey'\nimport { getRandomArbitrary } from '../utils/landom'\n\nconst rewardMapper = {\n  [lottoRewardKey.FIFTH]: lottoReward.fifth,\n  [lottoRewardKey.FOURTH]: lottoReward.fourth,\n  [lottoRewardKey.THIRD]: lottoReward.third,\n  [lottoRewardKey.SECOND]: lottoReward.second,\n  [lottoRewardKey.FIRST]: lottoReward.fisrt,\n}\n\nexport default class LottoService {\n  #purchasedLottos\n  #lottoPrice\n  #lottoAnswer\n\n  constructor() {\n    this.setInit()\n  }\n\n  setInit() {\n    this.#lottoPrice = lottoConfig.price || 1000\n    this.#purchasedLottos = []\n    this.#lottoAnswer = {\n      base: [],\n      bonus: 0,\n    }\n  }\n\n  autoPurchase(count, fixedValues) {\n    for (let i = 0; i < count; i += 1) {\n      this.generatorLottoNumber(fixedValues ? fixedValues[i] : null)\n    }\n  }\n\n  generatorLottoNumber(fixed) {\n    this.#purchasedLottos.push(this.getLottoNumbers(fixed))\n  }\n\n  getLottoNumbers(fixed) {\n    if (fixed) {\n      return fixed.slice(0, 6)\n    }\n\n    const lottoNumberSet = new Set()\n\n    while (lottoNumberSet.size !== lottoConfig.lottoNumberCount - 1) {\n      const randomValue = Math.floor(\n        getRandomArbitrary(1, lottoConfig.maxLottoNumber + 1)\n      )\n\n      if (!lottoNumberSet.has(randomValue)) {\n        lottoNumberSet.add(randomValue)\n      }\n    }\n\n    return Array.from(lottoNumberSet)\n  }\n\n  calcLottoBenefit() {\n    const benefitMap = new Map()\n\n    this.#purchasedLottos.forEach((purchasedLotto) => {\n      const lottoSet = new Set()\n      let matches = 0\n\n      purchasedLotto.forEach((number) => {\n        lottoSet.add(number)\n      })\n\n      this.#lottoAnswer.base.forEach((number) => {\n        if (lottoSet.has(number)) {\n          matches += 1\n        }\n      })\n\n      if (matches === 5) {\n        if (purchasedLotto.includes(this.#lottoAnswer.bonus)) {\n          benefitMap.set(\n            lottoRewardKey.SECOND,\n            (benefitMap.get(lottoRewardKey.SECOND) || 0) + 1\n          )\n          return\n        }\n      }\n\n      if (!rewardMapper[matches]) {\n        return\n      }\n\n      benefitMap.set(matches, (benefitMap.get(matches) || 0) + 1)\n    })\n\n    let benefit = 0\n    const rank = {}\n\n    benefitMap.forEach((count, matches) => {\n      console.log(matches, count, rewardMapper)\n      benefit += rewardMapper[matches] * count\n\n      rank[matches] = count\n    })\n\n    return {\n      benefitRate: Math.floor(\n        (benefit / (this.#purchasedLottos.length * lottoConfig.price)) * 100 -\n          100\n      ),\n      rank,\n    }\n  }\n\n  set lottoAnswer(answer) {\n    this.#lottoAnswer = answer\n  }\n\n  get myLottos() {\n    return this.#purchasedLottos\n  }\n\n  get lottoPrice() {\n    return this.#lottoPrice\n  }\n}\n","function getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min\n}\n\nexport { getRandomArbitrary }\n","const $ = (selector) => document.querySelector(selector)\n\nexport { $ }\n","import LottoContainer from './components/LottoContainer'\nimport lottoConfig from './config/lotto.config'\nimport ClassName from './constants/ClassName'\nimport CypressDom from './constants/CypressDom'\nimport ElementId from './constants/ElementId'\nimport Event from './constants/Event'\nimport EventType from './constants/EventType'\nimport Name from './constants/Name'\nimport LottoService from './service/LottoService'\nimport { $ } from './utils/dom'\n\nconst clickEventMapper = {\n  [EventType.purchase]: (lottoService) => onLottoPurchase(lottoService),\n  [EventType.checkMyLottoResult]: (lottoService) =>\n    onCheckMyLottoResult(lottoService),\n  [EventType.toggleMyLotto]: () => onToggleMyLottoNumber(),\n  [EventType.resetGame]: (lottoService) => resetGame(lottoService),\n}\n\nexport default class App {\n  #rootContainer\n  #lottoService\n\n  constructor() {\n    this.#rootContainer = $('#' + ElementId.luckyLottoContainer)\n    this.#lottoService = new LottoService()\n    new LottoContainer(this.#rootContainer)\n\n    this.setEvent()\n  }\n\n  setEvent() {\n    this.#rootContainer.addEventListener(Event.onClick, (event) => {\n      const clickEvent = event.target.dataset.event\n\n      console.log(event)\n\n      if (!clickEvent) {\n        return\n      }\n\n      console.log('on')\n      clickEventMapper[clickEvent](this.#lottoService)\n    })\n\n    $('.modal').addEventListener(Event.onClick, (event) => {\n      const clickEvent = event.target.dataset.event\n\n      if (!clickEvent) {\n        return\n      }\n\n      if (clickEvent !== EventType.resetGame) {\n        return\n      }\n\n      clickEventMapper[clickEvent](this.#lottoService)\n    })\n  }\n}\n\nfunction onLottoPurchase(lottoService) {\n  const money = Number($('#' + ElementId.purchaseInput).value)\n\n  if (money === 0 || money % lottoService.lottoPrice !== 0) {\n    alert(lottoService.lottoPrice + 'Ïõê Îã®ÏúÑÎ°ú ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.')\n    return\n  }\n\n  const lottoAmount = money / lottoService.lottoPrice\n\n  lottoService.autoPurchase(lottoAmount)\n\n  setLottoViewVisible(true)\n\n  handlePurchaseLotto(lottoService.myLottos)\n}\n\nfunction onCheckMyLottoResult(lottoService) {\n  const LottoAnswer = $('#' + ElementId.lottoAnswerInput)\n\n  console.log('on2')\n  const answer = new FormData(LottoAnswer)\n\n  const base = answer\n    .getAll(Name.baseLottoNumbers)\n    .map((number) => Number(number))\n\n  const bonus = Number(answer.get(Name.bonusLottoNumber))\n\n  const lottoValidation = validationLottoAnswer(base, bonus)\n\n  if (lottoValidation.error) {\n    alert(lottoValidation.message)\n    return\n  }\n\n  lottoService.lottoAnswer = { base, bonus }\n  const benefitResult = lottoService.calcLottoBenefit()\n\n  console.log(benefitResult.rank)\n\n  document.querySelectorAll('td[data-rank-label]').forEach((node) => {\n    const count = benefitResult.rank[Number(node.dataset.rankLabel)] || 0\n\n    node.innerText = count + 'Í∞ú'\n  })\n\n  $(\n    '#' + ElementId.benefitRateLabel\n  ).innerText = `ÎãπÏã†Ïùò Ï¥ù ÏàòÏùµÎ•†ÏùÄ ${benefitResult.benefitRate}%ÏûÖÎãàÎã§.`\n\n  $('.modal').classList.add('open')\n}\n\nfunction validationLottoAnswer(base, bonus) {\n  const numberSet = new Set()\n\n  if (!validLottoNumber(bonus)) {\n    return {\n      error: true,\n      message: `Î°úÎòê Î≤àÌò∏Îäî 1Î≤àÎ∂ÄÌÑ∞ ${lottoConfig.maxLottoNumber}ÍπåÏßÄ ÏûÖÎ†• Ìï† Ïàò ÏûàÏäµÎãàÎã§.`,\n    }\n  }\n\n  numberSet.add(bonus)\n\n  for (const baseNumber of base) {\n    if (!validLottoNumber(baseNumber) || numberSet.has(baseNumber)) {\n      return { error: true, message: 'Ï§ëÎ≥µÎêú Î°úÎòê Î≤àÌò∏Í∞Ä ÏûàÏäµÎãàÎã§.' }\n    }\n\n    numberSet.add(baseNumber)\n  }\n\n  return { error: false }\n}\n\nfunction validLottoNumber(number) {\n  if (number <= 0 || number > lottoConfig.maxLottoNumber) {\n    return false\n  }\n\n  return true\n}\n\nfunction onToggleMyLottoNumber() {\n  const isVisible = $('#' + ElementId.toggleButton).checked\n\n  toggleLottoVisible(isVisible)\n}\n\nfunction toggleLottoVisible(visible) {\n  const details = document.querySelectorAll('.lotto-detail')\n\n  details.forEach((detail) => {\n    detail.style.display = visible ? '' : 'none'\n  })\n}\n\nfunction resetGame(lottoService) {\n  lottoService.setInit()\n  resetUI()\n}\n\nfunction resetUI() {\n  const modal = document.querySelector('.modal')\n  const toggleButton = $('#' + ElementId.toggleButton)\n  const purchaseButton = $('#' + ElementId.purchaseInput)\n  const isVisible = toggleButton.checked\n\n  setLottoViewVisible(false)\n\n  modal.classList.remove('open')\n  purchaseButton.value = ''\n  purchaseButton.focus()\n\n  document\n    .getElementsByName(Name.baseLottoNumbers)\n    .forEach((el) => (el.value = ''))\n  document\n    .getElementsByName(Name.bonusLottoNumber)\n    .forEach((el) => (el.value = ''))\n\n  $(\n    '#' + ElementId.purchasedLottoAmountLabel\n  ).innerText = `Ï¥ù 0Í∞úÎ•º Íµ¨Îß§ÌïòÏòÄÏäµÎãàÎã§.`\n\n  $('#' + ElementId.purchasedLottoViewer).innerHTML = ''\n\n  if (toggleButton.checked) {\n    toggleLottoVisible(isVisible)\n    toggleButton.checked = false\n  }\n}\n\nfunction setLottoViewVisible(visible) {\n  if (visible) {\n    $('#' + ElementId.purchasedLotto).classList.remove(ClassName.displayNone)\n    $('#' + ElementId.lottoAnswerInput).classList.remove(ClassName.displayNone)\n    return\n  }\n\n  $('#' + ElementId.purchasedLotto).classList.add(ClassName.displayNone)\n  $('#' + ElementId.lottoAnswerInput).classList.add(ClassName.displayNone)\n}\n\nfunction handlePurchaseLotto(lottoNumbers) {\n  const template = (numbers) => {\n    return `\n      <li class=\"mx-1 text-4xl lotto-wrapper\">\n      <span class=\"lotto-icon\">üéüÔ∏è </span>\n      <span class=\"lotto-detail\" style=\"display: none;\" data-test-element=\"${\n        CypressDom.lottoDetail\n      }\"\">${numbers.reduce((a, b) => a + ', ' + b)}</span>\n      </li>\n    `\n  }\n\n  $('#' + ElementId.purchasedLottoViewer).innerHTML = `${lottoNumbers\n    .map((lottoNumber) => template(lottoNumber))\n    .join('')}`\n\n  $(\n    '#' + ElementId.purchasedLottoAmountLabel\n  ).innerText = `Ï¥ù ${lottoNumbers.length}Í∞úÎ•º Íµ¨Îß§ÌïòÏòÄÏäµÎãàÎã§.`\n\n  $('#' + ElementId.purchasedLottoAmountLabel).dataset.count =\n    lottoNumbers.length\n}\n","import App from './App'\n\nnew App()\n\nif (module.hot) {\n  module.hot.dispose(function () {\n    window.location.reload()\n  })\n}\n\nconst $modalClose = document.querySelector('.modal-close')\nconst $modal = document.querySelector('.modal')\n\nconst onModalClose = () => {\n  $modal.classList.remove('open')\n}\n\n$modalClose.addEventListener('click', onModalClose)\n"],"names":["$2cf0d016eeb38909$export$2e2bcd8739ae039","Object","freeze","luckyLottoContainer","lottoAnswerInput","purchaseInput","purchasedLotto","purchasedLottoAmountLabel","benefitRateLabel","toggleButton","$fbef73d260eb0c4b$export$2e2bcd8739ae039","purchase","toggleMyLotto","checkMyLottoResult","resetGame","$1862773adaf04543$export$2e2bcd8739ae039","baseLottoNumbers","bonusLottoNumber","$e086471375686490$export$2e2bcd8739ae039","displayNone","$fba213f3e5553949$export$2e2bcd8739ae039","purchaseButton","lottoCountLabel","lottoDetail","resultLottoRankLabel","resultLottoBenefitRateLabel","benefitRateButton","baseLottoInput","bonusLottoInput","$9757ae131c3dc75b$export$2e2bcd8739ae039","price","maxLottoNumber","lottoNumberCount","$target","this","setup","setEvent","render","template","innerHTML","concat","ElementId","CypressDom","EventType","ClassName","purchasedLottoViewer","Name","$a142127a50b3cfa4$export$2e2bcd8739ae039","onClick","$de74b5a3c16e9671$export$2e2bcd8739ae039","fisrt","second","third","fourth","fifth","$d163ed389a48675f$export$2e2bcd8739ae039","FIRST","SECOND","THIRD","FOURTH","FIFTH","rewardMapper","lottoRewardKey","lottoReward","$83733414b25bf0bb$var$_classPrivateFieldInitSpec","$83733414b25bf0bb$var$_purchasedLottos","writable","value","$83733414b25bf0bb$var$_lottoPrice","$83733414b25bf0bb$var$_lottoAnswer","setInit","$83733414b25bf0bb$var$_classPrivateFieldSet","lottoConfig","base","bonus","autoPurchase","count","fixedValues","i","generatorLottoNumber","fixed","$83733414b25bf0bb$var$_classPrivateFieldGet","push","getLottoNumbers","slice","min","max","lottoNumberSet","Set","size","randomValue","Math","floor","random","has","add","Array","from","calcLottoBenefit","benefitMap","Map","forEach","lottoSet","matches","number","includes","set","get","benefit","rank","console","log","benefitRate","length","lottoAnswer","answer","myLottos","lottoPrice","$","selector","document","querySelector","clickEventMapper","lottoService","money","Number","alert","lottoAmount","setLottoViewVisible","lottoNumbers","numbers","reduce","a","b","map","lottoNumber","join","innerText","dataset","onLottoPurchase","LottoAnswer","FormData","getAll","lottoValidation","numberSet","validLottoNumber","error","message","baseNumber","validationLottoAnswer","benefitResult","querySelectorAll","node","rankLabel","classList","onCheckMyLottoResult","toggleLottoVisible","checked","modal","isVisible","remove","focus","getElementsByName","el","visible","detail","style","display","$85fd2830325880ff$var$_classPrivateFieldInitSpec","$85fd2830325880ff$var$_rootContainer","$85fd2830325880ff$var$_lottoService","$85fd2830325880ff$var$_classPrivateFieldSet","LottoService","LottoContainer","$85fd2830325880ff$var$_classPrivateFieldGet","addEventListener","Event","event","clickEvent","target","$modalClose","$modal"],"version":3,"file":"index.debcc4ff.js.map"}